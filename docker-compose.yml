name: redpanda-demo
# networks:
#     redpanda_network:
#         driver: bridge

volumes:
    redpanda-0: null

services:
    redpanda-0:
        command:
            - redpanda
            - start
            - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
            # Address the broker advertises to clients that connect to the Kafka API.
            # Use the internal addresses to connect to the Redpanda brokers'
            # from inside the same Docker network.
            # Use the external addresses to connect to the Redpanda brokers'
            # from outside the Docker network.
            - --advertise-kafka-addr internal://redpanda-0:9092,external://localhost:19092
            - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
            # Address the broker advertises to clients that connect to the HTTP Proxy.
            - --advertise-pandaproxy-addr internal://redpanda-0:8082,external://localhost:18082
            - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
            # Redpanda brokers use the RPC API to communicate with each other internally.
            - --rpc-addr redpanda-0:33145
            - --advertise-rpc-addr redpanda-0:33145
            - --mode dev-container
            - --smp 1
            - --default-log-level=info
        image: docker.redpanda.com/redpandadata/redpanda:${REDPANDA_VERSION}
        container_name: redpanda-0
        volumes:
            - redpanda-0:/var/lib/redpanda/data
            - ./.bootstrap.yaml:/etc/redpanda/.bootstrap.yaml
        # networks:
        #     - redpanda_network
        ports:
            - 18081:18081
            - 18082:18082
            - 19092:19092
            - 19644:9644

    console:
        container_name: redpanda-console
        image: docker.redpanda.com/redpandadata/console:${REDPANDA_CONSOLE_VERSION}
        # networks:
        #     - redpanda_network
        entrypoint: /bin/sh
        command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
        environment:
            CONFIG_FILEPATH: /tmp/config.yml
            CONSOLE_CONFIG_FILE: |
                kafka:
                  brokers: ["redpanda-0:9092"]
                  schemaRegistry:
                    enabled: true
                    urls: ["http://redpanda-0:8081"]
                redpanda:
                  adminApi:
                    enabled: true
                    urls: ["http://redpanda-0:9644"]
                connect:
                  enabled: false
                  clusters:
                    - name: connect
                      url: http://connect:8083
        ports:
            - 8080:8080
        depends_on:
            - redpanda-0

    localstack:
        image: localstack/localstack:${LOCALSTACK_VERSION}
        container_name: localstack-main
        # networks:
        #     - redpanda_network
        ports:
            - "4510-4559:4510-4559"
            - "4566:4566"
        environment:
            - GATEWAY_LISTEN=0.0.0.0:4566
            - EXTERNAL_SERVICE_PORTS_START=4510
            - EXTERNAL_SERVICE_PORTS_END=4559
            - SERVICES=s3,sqs
            - DEBUG=1
        volumes:
            - "./docker/localstack:/var/lib/localstack"
            - "/var/run/docker.sock:/var/run/docker.sock"

    s3_event_listener:
        image: amazon/aws-cli:${AWS_CLI_VERSION}
        container_name: s3_event_listener
        # networks:
        #     - redpanda_network
        depends_on:
            - localstack
        environment:
            AWS_ACCESS_KEY_ID: "AKIAIOSFODNN7EXAMPLE"
            AWS_SECRET_ACCESS_KEY: "wJalrXUtnFEMIK7MDENGbPxRfiCYEXAMPLEKEY"
            AWS_REGION: "us-east-1"
        entrypoint: >
            /bin/sh -c "
            aws --endpoint-url=http://localstack:4566 s3api create-bucket --bucket demobucket &&
            aws --endpoint-url=http://localstack:4566 s3api put-bucket-acl --bucket demobucket --acl public-read &&
            aws --endpoint-url=http://localstack:4566 sqs create-queue --queue-name demoqueue &&
            aws --endpoint-url=http://localstack:4566 s3api put-bucket-notification-configuration --bucket demobucket --notification-configuration '{
                \"QueueConfigurations\": [
                {
                    \"QueueArn\": \"arn:aws:sqs:us-east-1:000000000000:demoqueue\",
                    \"Events\": [\"s3:ObjectCreated:*\"] 
                }
                ]
            }' &&
            tail -f /dev/null
            "
